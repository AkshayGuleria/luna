import Std.Base

class HttpMethod:
    POST
    GET
    PUT
    DELETE

    def toText: case self of
        POST:   "POST"
        GET:    "GET"
        PUT:    "PUT"
        DELETE: "DELETE"

class HttpResponse:
    HttpResponse Int Binary

    def body: case self of
        HttpResponse code body: body

    def text: self.body.toText

    def json: parseJSON self.body.toText

    def responseCode: case self of
        HttpResponse code body: code

class HttpRequest:
    HttpRequest Text HttpMethod (Map Text Text) Binary

    def method: case self of
        HttpRequest uri method headers body: method

    def setMethod m: case self of
        HttpRequest uri method headers body: HttpRequest uri m headers body

    def body: case self of
        HttpRequest uri method headers body: body

    def setBody b: case self of
        HttpRequest uri method headers body: HttpRequest uri method headers b

    def uri: case self of
        HttpRequest uri method headers body: uri

    def setUri u: case self of
        HttpRequest uri method headers body: HttpRequest u method headers body

    def headers: case self of
        HttpRequest uri method headers body: headers

    def addHeader key val: case self of
        HttpRequest uri method headers body: HttpRequest uri method (headers.insert key val)

    def perform: primPerformHttp self.uri (self.method.toText) self.headers.toList self.body

class Http:
    Http

    def get uri:
        HttpRequest uri GET Map.empty "".toBinary

    def post uri body:
        HttpRequest uri POST Map.empty body.toBinary

    def put uri body:
        HttpRequest uri PUT Map.empty body.toBinary

    def delete uri:
        HttpRequest uri DELETE Map.empty "".toBinary

    def getBinary uri:
        Http.get uri . perform . body

    def getJSON uri:
        Http.get uri . perform . json
